<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://bobohy01.github.io/author/bobohy01/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://bobohy01.github.io/" rel="alternate" type="text/html" />
  <updated>2022-08-29T12:50:08+09:00</updated>
  <id>https://bobohy01.github.io/author/bobohy01/feed.xml</id>

  
  
  

  
    <title type="html">Data Analysis | </title>
  

  
    <subtitle>데이터 분석</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">(7) SQL 고득점 Kit - String, Date</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_6" rel="alternate" type="text/html" title="(7) SQL 고득점 Kit - String, Date" />
      <published>2022-08-26T11:00:00+09:00</published>
      <updated>2022-08-26T11:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_6</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_6">&lt;p&gt;&lt;br /&gt;
해당 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;6-string-date&quot;&gt;6. String, Date&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-루시와-엘라-찾기&quot;&gt;(1) 루시와 엘라 찾기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 중 이름이 Lucy, Ella, Pickle, Rogan, Sabrina, Mitty인 동물의 아이디와 이름, 성별 및 중성화 여부를 조회하는 SQL 문을 작성해주세요. 이때 결과는 아이디 순으로 조회해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_24.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름, SELECT에서 ANIMAL_ID, NAME, SEX_UPON_INTAKE 변수를 선택합니다. Lucy, Ella, Pickle, Rogan, Sabrina, Mitty 이름이 들어있는 동물을 찾기 위해 WHERE에서 IN 함수를 사용하여 데이터를 추출합니다. 그리고 ANIMAL_ID로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SEX_UPON_INTAKE&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;Lucy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;Ella&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;Pickle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;Rogan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;Sabrina&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;Mitty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-이름에-el이-들어가는-동물-찾기&quot;&gt;(2) 이름에 el이 들어가는 동물 찾기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보호소에 돌아가신 할머니가 기르던 개를 찾는 사람이 찾아왔습니다. 이 사람이 말하길 할머니가 기르던 개는 이름에 ‘el’이 들어간다고 합니다. 동물 보호소에 들어온 동물 이름 중, 이름에 “EL”이 들어가는 개의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 이름 순으로 조회해주세요. 단, 이름의 대소문자는 구분하지 않습니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_25.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름, SELECT에서 ANIMAL_ID, NAME 변수를 선택합니다. 이름에 EL이 있는 동물을 찾기 위해 LIKE에 “%EL%”을 작성하고, 개를 찾아야하므로 ANIMAL_TYPE을 DOG로 지정합니다. 그리고 NAME로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%EL%&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;Dog&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-중성화-여부-파악하기&quot;&gt;(3) 중성화 여부 파악하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보호소의 동물이 중성화되었는지 아닌지 파악하려 합니다. 중성화된 동물은 SEX_UPON_INTAKE 컬럼에 ‘Neutered’ 또는 ‘Spayed’라는 단어가 들어있습니다. 동물의 아이디와 이름, 중성화 여부를 아이디 순으로 조회하는 SQL문을 작성해주세요. 이때 중성화가 되어있다면 ‘O’, 아니라면 ‘X’라고 표시해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_26.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름, SELECT에서 ANIMAL_ID, NAME, SEX_UPON_INTAKE 변수를 선택합니다. 이때 중성화의 값을 변경해야하기 때문에 CASE WHEN을 이용합니다. SEX_UPON_INTAKE가 “%Spayed%” 또는 “%Neutered%”인 경우 중성화 된 것이므로 “O”으로 변경하고, 그 외엔 “X”로 변경합니다. 그리고 ANIMAL_ID로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SEX_UPON_INTAKE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%Spayed%&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;O&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SEX_UPON_INTAKE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%Neutered%&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;O&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;X&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중성화&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-오랜-기간-보호한-동물-2&quot;&gt;(4) 오랜 기간 보호한 동물 2&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;입양을 간 동물 중, 보호 기간이 가장 길었던 동물 두 마리의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 기간이 긴 순으로 조회해야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_27.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;먼저 보호소에 들어온 정보를 담고 있는 ANIMAL_INS 테이블과 입양 정보를 담고 있는 ANIMAL_OUTS 테이블을 병합합니다. FROM에 ANIMAL_INS을 넣고, JOIN에 ANIMAL_OUTS을 넣습니다. 이때 기준 변수는 ANIMAL_ID을 이용합니다. 보호 기간이 긴 순으로 조회해야 하기 때문에 DATEDIFF함수를 이용하여 날짜의 차이를 구합니다. 이를 ORDER BY에 넣어 오래된 동물 순으로 정렬한 후 2마리 동물을 추출하기 위해 LIMIT 2을 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATEDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-datetime에서-date로-데이터-변환&quot;&gt;(5) DATETIME에서 DATE로 데이터 변환&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ANIMAL_INS 테이블에 등록된 모든 레코드에 대해, 각 동물의 아이디와 이름, 들어온 날짜를 조회하는 SQL문을 작성해주세요. 이때 시각(시-분-초)을 제외한 날짜(년-월-일)만 보여주고, 결과는 아이디 순으로 조회해야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_28.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름, SELECT에서 ANIMAL_ID, NAME, DATETIME 변수를 선택합니다. 이때 날짜의 형식을 바꾸기 위해 DATE_FORMAT 함수를 이용합니다. DATE_FORMAT 함수에 DATETIME을 넣고 원하는 날짜 형식인 “%Y - %m - %d”을 입력합니다. 그리고 ANIMAL_ID로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_FORMAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%Y-%m-%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;날짜&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html">해당 문제는 프로그래머스(Programmers)사이트의 SQL 고득점 Kit 에서 제공됩니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(6) SQL 고득점 Kit - JOIN</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_5" rel="alternate" type="text/html" title="(6) SQL 고득점 Kit - JOIN" />
      <published>2022-08-26T10:00:00+09:00</published>
      <updated>2022-08-26T10:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_5</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_5">&lt;p&gt;&lt;br /&gt;
해당 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;5-join&quot;&gt;5. JOIN&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-없어진-기록-찾기&quot;&gt;(1) 없어진 기록 찾기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;천재지변으로 인해 일부 데이터가 유실되었습니다. 입양을 간 기록은 있는데, 보호소에 들어온 기록이 없는 동물의 ID와 이름을 ID 순으로 조회하는 SQL문을 작성해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_20.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;입양을 간 기록이 있는 데이터는 ANIMAL_OUTS이고, 보호소에 들어온 기록이 있는 데이터는 ANIMAL_INS이다. 이때 입양을 간 기록은 있는데 보호소에 들어온 기록이 없는 데이터를 찾아야하므로 ANIMAL_OUTS를 기준으로 조인을 해야한다. FROM에 ANIMAL_INS을 넣고 RIGHT JOIN에 ANIMAL_OUTS을 추가하면 오른쪽 데이터인 ANIMAL_OUTS을 기준으로 ANIMAL_INS 데이터가 병합된다. 이때 데이터의 결합을 위한 KEY 변수로 ANIMAL_ID를 이용한다. 여기서
  ANIMAL_INS 데이터가 없는 동물을 찾아야하므로 WHERE에 A.ANIMAL_ID가 IS NULL인 것을 선택한다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RIGHT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-있었는데요-없었습니다&quot;&gt;(2) 있었는데요 없었습니다&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;관리자의 실수로 일부 동물의 입양일이 잘못 입력되었습니다. 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일이 빠른 순으로 조회해야합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_21.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;먼저 동물 보호소에 들어온 동물의 정보를 담은 ANIMAL_INS 테이블과 입양 보낸 동물의 정보를 담은 ANIMAL_OUTS 테이블을 병합합니다. FROM에 ANIMAL_INS을 넣고 JOIN에 ANIMAL_OUTS을 넣습니다. 그리고 둘을 병합할 때 사용할 KEY 변수인 ANIMAL_ID을 ON에 작성합니다. 보호시작일 보다 입양일이 더 빠른 동물을 찾기 위해 WHERE에 A.DATETIME &amp;gt; B.DATETIME을 작성하여 데이터를 추출하고, 보호 시작일 A.DATETIME로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-오랜-기간-보호한-동물-1&quot;&gt;(3) 오랜 기간 보호한 동물 1&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아직 입양을 못 간 동물 중, 가장 오래 보호소에 있었던 동물 3마리의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일 순으로 조회해야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_22.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;입양을 못 간 동물은 DATETIME이 NULL일 것이고, 보호소에 있는 정보는 모두 존재할 것입니다. 따라서 보호소에 들어온 정보를 담은 ANIMAL_INS 테이블를 기준으로 입양 보낸 동물의 정보를 담은 ANIMAL_OUTS 테이블을 병합합니다. FROM에 ANIMAL_INS을 넣고, LEFT JOIN에 ANIMAL_OUTS을 넣으면 왼쪽 데이터인 ANIMAL_INS을 기준으로 병합됩니다. 이때 기준 변수는 ANIMAL_ID을 이용합니다. 그 후 입양을 못간 동물을 찾아야하니 WHERE에 B.ANIMAL_ID IS NULL을 입력합니다. 그리고 A.DATETIME을 기준으로 정렬하고, 동물 3마리를 추출하기 위해 LIMIT 3을 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-보호소에서-중성화한-동물&quot;&gt;(4) 보호소에서 중성화한 동물&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보호소에서 중성화 수술을 거친 동물 정보를 알아보려 합니다. 보호소에 들어올 당시에는 중성화되지 않았지만, 보호소를 나갈 당시에는 중성화된 동물의 아이디와 생물 종, 이름을 조회하는 아이디 순으로 조회하는 SQL 문을 작성해주세요. 이때 중성화를 거치지 않은 동물은 성별 및 중성화 여부에 Intact, 중성화를 거친 동물은 Spayed 또는 Neutered라고 표시되어있습니다.(SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_23.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;먼저 동물 보호소에 들어온 동물의 정보를 담은 ANIMAL_INS 테이블과 입양 보낸 동물의 정보를 담은 ANIMAL_OUTS 테이블을 병합합니다. FROM에 ANIMAL_INS을 넣고 JOIN에 ANIMAL_OUTS을 넣습니다. 그리고 둘을 병합할 때 사용할 KEY 변수인 ANIMAL_ID을 ON에 작성합니다. 그리고 보호소에 들어올 당시에는 중성화되지 않았지만, 보호소를 나갈 당시에는 중성화된 동물은 중성화 변수의 값이 다릅니다. 따라서, WHERE에 A.SEX_UPON_INTAKE와 B.SEX_UPON_OUTCOME가 같지 않은 데이터를 추출하고, A.ANIMAL_ID로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SEX_UPON_INTAKE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SEX_UPON_OUTCOME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html">해당 문제는 프로그래머스(Programmers)사이트의 SQL 고득점 Kit 에서 제공됩니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(2) My SQL 기본 (작성중)</title>
      <link href="https://bobohy01.github.io/mysql-basics" rel="alternate" type="text/html" title="(2) My SQL 기본 (작성중)" />
      <published>2022-08-25T10:00:00+09:00</published>
      <updated>2022-08-25T10:00:00+09:00</updated>
      <id>https://bobohy01.github.io/mysql-basics</id>
      <content type="html" xml:base="https://bobohy01.github.io/mysql-basics">&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; MySQL Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./mysql-install&quot;&gt; (1) My SQL 설치 &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./mysql-basics&quot;&gt; (2) My SQL 기본 (작성중) &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="mysql" />
      

      
        <summary type="html">MySQL Contents (1) My SQL 설치 (2) My SQL 기본 (작성중)</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(5) SQL 고득점 Kit - IS NULL</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_4" rel="alternate" type="text/html" title="(5) SQL 고득점 Kit - IS NULL" />
      <published>2022-08-24T11:00:00+09:00</published>
      <updated>2022-08-24T11:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_4</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_4">&lt;p&gt;&lt;br /&gt;
해당 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-is-null&quot;&gt;4. IS NULL&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-이름이-없는-동물의-아이디&quot;&gt;(1) 이름이 없는 동물의 아이디&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 중, 이름이 없는 채로 들어온 동물의 ID를 조회하는 SQL 문을 작성해주세요. 단, ID는 오름차순 정렬되어야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_17.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 ANIMAL_ID를 선택합니다. 그 다음 NAME이 없는 동물을 찾아야하므로 WHERE에 NAME IS NULL을 입력합니다. 그리고 ANIMAL_ID이 오름차순으로 정렬되야하므로 ORDER BY ANIMAL_ID를 설정합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-이름이-있는-동물의-아이디&quot;&gt;(2) 이름이 있는 동물의 아이디&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 중, 이름이 있는 동물의 ID를 조회하는 SQL 문을 작성해주세요. 단, ID는 오름차순 정렬되어야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_18.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 ANIMAL_ID를 선택합니다. 그 다음 NAME이 있는 동물을 찾아야하므로 WHERE에 NAME IS NOT NULL을 입력합니다. 그리고 ANIMAL_ID이 오름차순으로 정렬되야하므로 ORDER BY ANIMAL_ID를 설정합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-null-처리하기&quot;&gt;(3) NULL 처리하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;입양 게시판에 동물 정보를 게시하려 합니다. 동물의 생물 종, 이름, 성별 및 중성화 여부를 아이디 순으로 조회하는 SQL문을 작성해주세요. 이때 이름이 없는 동물의 이름은 “No name”으로 표시해 주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_19.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 동물의 생물 종, 이름, 성별 및 중성화 여부를 아이디 순으로 조회해야하므로 SELECT에 ANIMAL_TYPE, NAME, SEX_UPON_INTAKE를 입력합니다. 이때 NAME이 NULL이면 “No name”을 입력해야하므로 IFNULL함수를 이용하여 NULL을 “No name”을 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IFNULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;No name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SEX_UPON_INTAKE&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html">해당 문제는 프로그래머스(Programmers)사이트의 SQL 고득점 Kit 에서 제공됩니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(4) SQL 고득점 Kit - GROUP BY</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_3" rel="alternate" type="text/html" title="(4) SQL 고득점 Kit - GROUP BY" />
      <published>2022-08-24T10:00:00+09:00</published>
      <updated>2022-08-24T10:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_3</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_3">&lt;p&gt;&lt;br /&gt;
해당 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-group-by&quot;&gt;3. GROUP BY&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-고양이와-개는-몇마리-있을까&quot;&gt;(1) 고양이와 개는 몇마리 있을까&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 중 고양이와 개가 각각 몇 마리인지 조회하는 SQL문을 작성해주세요. 이때 고양이를 개보다 먼저 조회해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_13.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 개와 고양이 각각 몇마리인지 구해야하므로 GROUP BY를 이용하여 ANIMAL_TYPE을 구분합니다. 그 후 SELECT에서 COUNT함수를 통해 ANIMAL_TYPE별 동물의 수를 구합니다. 이때 ANIMAL_TYPE은 고양이부터 나와야 하므로 ORDER BY에 ANIMAL_TYPE을 입력하여 오름차순으로 정렬합니다. 그리고 결과 화면에서 변수명이 “COUNT”로 되어있기 때문에 SELECT에서 AS “COUNT”을 추가하여 변수명을 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_TYPE&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_TYPE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-동명-동물-수-찾기&quot;&gt;(2) 동명 동물 수 찾기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 이름 중 두 번 이상 쓰인 이름과 해당 이름이 쓰인 횟수를 조회하는 SQL문을 작성해주세요. 이때 결과는 이름이 없는 동물은 집계에서 제외하며, 결과는 이름 순으로 조회해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_14.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 먼저 이름이 없는 동물은 집계에서 제외해야하므로 WHERE에서 NAME IS NOT NULL을 입력합니다. 그 후 들어온 동물 중 이름이 2번 이상 쓰인 동물을 찾아야 하므로 동물 이름의 수를 구합니다. GROUP BY를 NAME로 하고 SELECT에서 COUNT함수를 사용하여 동물 이름의 수를 구합니다. 이때 2번이상 쓰인 동물만 추출해야하기 때문에 HAVING에서 COUNT &amp;gt;= 2라는 조건을 걸어줍니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-입양-시각-구하기-1&quot;&gt;(3) 입양 시각 구하기 1&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보호소에서는 몇 시에 입양이 가장 활발하게 일어나는지 알아보려 합니다. 09:00부터 19:59까지, 각 시간대별로 입양이 몇 건이나 발생했는지 조회하는 SQL문을 작성해주세요. 이때 결과는 시간대 순으로 정렬해야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_15.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 시간별 입양 건수를 구해야하므로 GROUP BY에 HOUR를 작성합니다. 이때 HOUR은 기존 테이블에 존재하지 않기 때문에 SELECT에서 HOUR함수를 사용하여 만들어 줍니다. 그리고 COUNT함수를 통해 시간대별 입양 건수를 구합니다. 그 후 시간이 9시부터 19시 59분까지라는 조건이 있으므로 HAVING에 HOUR(DATETIME) &amp;gt;= 9 AND HOUR(DATETIME) &amp;lt; 20 조건을 추가합니다. 마지막으로 ORDER BY에 HOUR를 추가하여 시간대별로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-입양-시각-구하기-2&quot;&gt;(4) 입양 시각 구하기 2&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보호소에서는 몇 시에 입양이 가장 활발하게 일어나는지 알아보려 합니다. 0시부터 23시까지, 각 시간대별로 입양이 몇 건이나 발생했는지 조회하는 SQL문을 작성해주세요. 이때 결과는 시간대 순으로 정렬해야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_16.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;해당 문제는 난이도가 높은 문제입니다. 먼저 시간을 0~23으로 설정하기 위해 SET에서 @HOUR이라는 변수에 초기값 -1을 지정합니다. 그리고 SELECT에서 “HOUR”라는 변수는 초기값 -1부터 계속 1을 더하는 형식인 @HOUR:=@HOUR+1을 사용하고, WHERE에서 마지막 값인 23을 넣어줍니다. 그러면 0부터 23까지 행이 만들어지게 됩니다. 다음으로 시간대별 COUNT를 구하려면 서브쿼리를 활용합니다. 서브쿼리는 WHERE에서 HOUR(DATETIME)가 @HOUR와 같을 때 COUNT함수를 통해 HOUR(DATETIME)의 갯수를 구합니다. 따라서 아래 코드를 실행하면, 앞서 만든 0~23행에 따라 각각 입양 건수를 구할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;HOUR&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;COUNT&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_OUTS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html">해당 문제는 프로그래머스(Programmers)사이트의 SQL 고득점 Kit 에서 제공됩니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(1) My SQL 설치</title>
      <link href="https://bobohy01.github.io/mysql-install" rel="alternate" type="text/html" title="(1) My SQL 설치" />
      <published>2022-08-23T10:00:00+09:00</published>
      <updated>2022-08-23T10:00:00+09:00</updated>
      <id>https://bobohy01.github.io/mysql-install</id>
      <content type="html" xml:base="https://bobohy01.github.io/mysql-install">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;My SQL을 다운 받기 위해, &lt;u&gt; &lt;a href=&quot;https://www.mysql.com/downloads/&quot; target=&quot;#&quot;&gt; My SQL 홈페이지&lt;/a&gt;&lt;/u&gt;에 접속합니다. 사이트 상단 Navigation bar에 있는 DOWNLOADS를 클릭하고, 하단에 MySQL Community (GPL) Downloads을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_1.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MySQL Community Server을 클릭하여 들어간 후 Recommended Download: 아래에 있는 MySQL Installer for Windows를 클릭하여 들어갑니다. 맨 아래에 있는 Windows (x86, 32-bit), MSI Installer의 오른쪽에 위치한 파란색 Download를 클릭합니다. 로그인 창이 나왔을 때, 로그인을 하여 설치해도 되고 No thanks, just start my download를 클릭하여 로그인 없이 설치해도 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_2.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;My SQL 설치 프로그램을 실행하면 Setup Type을 선택하게 되는데, 이때 Developer Default를 선택 후 Next를 클릭하여 넘어갑니다. 다음으로 Check Requirement 단계가 나오는데 아래 표시된 파일은 수동 설치 해야합니다. 하지만, 하지 않아도 My SQL을 설치 할 수 있기 때문에 Next 누르고 경고 창이 뜨면 Yes를 눌러 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_3.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Installation에서 Execute 클릭하여 My SQL 프로그램을 설치합니다. 모든 다운로드가 완료되어 초록색 체크 표시가 뜨면 Next를 클릭하여 다음으로 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_4.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Product Configuration은 Next를 클릭하여 넘어가고, Type and Networking에선 Port 번호를 입력해야 하는데 My SQL의 기본 Port 번호인 3306을 입력한 후 Next를 클릭하여 다음으로 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_5.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Authentication Method에선 인증을 위해 강력한 비밀번호 암호화 사용(use strong password encryption for authentication)을 선택한 후 Next를 클릭합니다. 이때 비밀번호를 설정하는 부분이 나오는데 비밀번호는 강하게 설정하고 꼭 기억해야합니다. 메모해두시는 것을 추천드립니다. 비밀번호를 설정했다면 Next를 클릭하여 다음으로 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_6.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Windows Service는 MySQL 서버를 Windows 서비스로 구성하는 부분으로 기본 설정 그대로 두고 Next를 클릭하여 다음으로 넘어갑니다. Apply Configuration에서 Execute를 클릭하여 설치 구성을 적용합니다. 설치 구성이 완료되어 초록색 체크 표시가 뜨면 Finish를 눌러 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_7.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MySQL Router Configuration은 기본 설정을 그대로 두고 Finish를 클릭하여 다음으로 넘어갑니다. Product Configuration은 지금까지 설치하면서 구성된 제품설정을 모두 완료한 것이므로 Next를 클릭하여 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_8.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Connect To Server에서 My SQL 서버에 연결할 수 있습니다. 앞서 설정한 비밀번호를 입력한 후 Check를 눌러 연결 성공 여부를 확인합니다. 초록색으로 연결 성공이 뜨면 Next를 눌러 다음으로 넘어갑니다. Apply Configuration에선 필요한 기능 설치를 위해 Execute를 클릭하여 설치 구성을 적용합니다. 설치 구성이 완료되어 초록색 체크 표시가 뜨면 Finish를 눌러 넘어갑니다. Product Configuration은 지금까지 설치하면서 구성된 제품설정을 모두 완료한 것이므로 Next를 클릭하여 넘어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_9.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MySQL 설치가 완료되었습니다. 설치 확인을 위해 Start MySQL Workbench after setup만 선택한 후 Finish를 클릭하여 설치를 완료합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_10.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MySQL이 실행되며 Welcome to MySQL Workbench 화면이 보이면 왼쪽 아래 Local instance MySQL80을 클릭합니다. 설정한 비밀번호를 입력 후 OK를 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_11.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아래 사진과 같이 정상적으로 로그인 되어 화면이 뜨면 My SQL 설치가 완료된 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\mysql\mysql1_install_12.png&quot; width=&quot;100%&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; MySQL Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./mysql-install&quot;&gt; (1) My SQL 설치 &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./mysql-basics&quot;&gt; (2) My SQL 기본 (작성중) &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="mysql" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_2" rel="alternate" type="text/html" title="(3) SQL 고득점 Kit - SUM &amp; MAX &amp; MIN" />
      <published>2022-08-22T12:00:00+09:00</published>
      <updated>2022-08-22T12:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_2</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_2">&lt;p&gt;&lt;br /&gt;
해당 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-sum--max--min&quot;&gt;2. SUM &amp;amp; MAX &amp;amp; MIN&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-최댓값-구하기&quot;&gt;(1) 최댓값 구하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;가장 최근에 들어온 동물은 언제 들어왔는지 조회하는 SQL 문을 작성해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_9.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 문제에서 가장 최근에 들어온 동물을 물어봤으므로 DATETIME가 가장 큰 동물을 찾아야합니다. 따라서 SELECT에서 MAX함수에 DATETIME를 입력합니다. 그리고 결과 화면에서 변수명이 “시간”으로 되어있기 때문에 SELECT에서 AS “시간”을 추가하여 변수명을 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;시간&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-최솟값-구하기&quot;&gt;(2) 최솟값 구하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 가장 먼저 들어온 동물은 언제 들어왔는지 조회하는 SQL 문을 작성해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_10.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 문제에서 가장 먼저 들어온 동물을 물어봤으므로 DATETIME가 가장 작은 동물을 찾아야합니다. 따라서 SELECT에서 MIN함수에 DATETIME를 입력합니다. 그리고 결과 화면에서 변수명이 “시간”으로 되어있기 때문에 SELECT에서 AS “시간”을 추가하여 변수명을 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;시간&apos;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-동물-수-구하기&quot;&gt;(3) 동물 수 구하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 동물이 몇 마리 들어왔는지 조회하는 SQL 문을 작성해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_11.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 보호소에 동물이 몇마리 있는지 세야하므로 SELECT에서 COUNT함수를 이용합니다. 동물은 각각 개인의 고유한 ID를 갖기 때문에 COUNT함수에 ANIMAL_ID을 입력합니다. 그리고 결과 화면에서 변수명이 “COUNT”로 되어있기 때문에 SELECT에서 AS “COUNT”을 추가하여 변수명을 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;COUNT&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-중복-제거하기&quot;&gt;(4) 중복 제거하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물의 이름은 몇 개인지 조회하는 SQL 문을 작성해주세요. 이때 이름이 NULL인 경우는 집계하지 않으며 중복되는 이름은 하나로 칩니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_12.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정합니다. 먼저, 이름이 NULL인 데이터를 제거하기 위해 WHERE에서 NAME IS NOT NULL을 입력합니다. 그 다음 보호소에 들어온 동물의 이름은 몇개인지 세야하므로 SELECT에서 COUNT함수를 이용합니다. 이때 NAME이 중복되지 않아야 하므로 DISTINCT 옵션을 추가합니다. 그리고 결과 화면에서 변수명이 “COUNT”로 되어있기 때문에 SELECT에서 AS “COUNT”을 추가하여 변수명을 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html">해당 문제는 프로그래머스(Programmers)사이트의 SQL 고득점 Kit 에서 제공됩니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(2) SQL 고득점 Kit - SELECT</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_1" rel="alternate" type="text/html" title="(2) SQL 고득점 Kit - SELECT" />
      <published>2022-08-22T11:00:00+09:00</published>
      <updated>2022-08-22T11:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_1</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_1">&lt;p&gt;&lt;br /&gt;
해당 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 제공됩니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-select&quot;&gt;1. SELECT&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-모든-레코드-조회하기&quot;&gt;(1) 모든 레코드 조회하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 모든 동물의 정보를 ANIMAL_ID순으로 조회하는 SQL문을 작성해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_2.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 모든 변수를 의미하는 *을 입력합니다. 문제에서 ANIMAL_ID순으로 정렬하라고 했으니 ORDER BY에 ANIMAL_ID를 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-역순-정렬하기&quot;&gt;(2) 역순 정렬하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 모든 동물의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 ANIMAL_ID 역순으로 보여주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_3.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 NAME, DATETIME을 선택합니다. 문제에서 ANIMAL_ID의 역순으로 정렬하라고 했으니 ORDER BY에 ANIMAL_ID 옆에 DESC를 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-아픈-동물-찾기&quot;&gt;(3) 아픈 동물 찾기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 중 아픈 동물의 아이디와 이름을 조회하는 SQL 문을 작성해주세요. 이때 아픈동물은 INTAKE_CONDITION이 Sick이고, 결과는 아이디 순으로 조회해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_4.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 변수는 ANIMAL_ID와 NAME을 선택합니다. 문제에서 아픈동물을 찾으라고 했으니 WHERE에 INTAKE_CONDITION = ‘Sick’을 입력합니다. 그리고 ANIMAL_ID로 정렬하라고 했으니 ORDER BY에 ANIMAL_ID를 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTAKE_CONDITION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Sick&apos;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-어린-동물-찾기&quot;&gt;(4) 어린 동물 찾기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 동물 중 젊은 동물의 아이디와 이름을 조회하는 SQL 문을 작성해주세요. 이때 젊은 동물은 INTAKE_CONDITION이 Aged가 아닌 경우를 뜻하며, 결과는 아이디 순으로 조회해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_5.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 변수는 ANIMAL_ID와 NAME을 선택합니다. 문제에서 젊은 동물을 찾으라고 했으니 WHERE에 INTAKE_CONDITION가 Aged가 아님을 의미하는 != 을 입력합니다. 그리고 ANIMAL_ID로 정렬하라고 했으니 ORDER BY에 ANIMAL_ID를 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTAKE_CONDITION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Aged&apos;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-동물의-아이디와-이름&quot;&gt;(5) 동물의 아이디와 이름&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 모든 동물의 아이디와 이름을 ANIMAL_ID순으로 조회하는 SQL문을 작성해주세요. SQL을 실행하면 다음과 같이 출력되어야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_6.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 변수는 ANIMAL_ID와 NAME을 선택합니다. 문제에서 ANIMAL_ID로 정렬하라고 했으니 ORDER BY에 ANIMAL_ID를 입력합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-여러-기준으로-정렬하기&quot;&gt;(6) 여러 기준으로 정렬하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 들어온 모든 동물의 아이디와 이름, 보호 시작일을 이름 순으로 조회하는 SQL문을 작성해주세요. 단, 이름이 같은 동물 중에서는 보호를 나중에 시작한 동물을 먼저 보여줘야 합니다. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_7.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 변수는 ANIMAL_ID,	NAME,	DATETIME을 선택합니다. 문제에서 NAME과 DATETIME으로 정렬하라고 했으니 ORDER BY 옆에 두 변수를 입력합니다. 이때 이름이 같은 경우 DATETIME이 더 큰 동물을 먼저 보여줘야 하므로 DATETIME에 DESC를 추가하여 내림차순으로 정렬합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;	&lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;7-상위-n개-레코드&quot;&gt;(7) 상위 n개 레코드&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;문제 &amp;amp; 결과&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동물 보호소에 가장 먼저 들어온 동물의 이름을 조회하는 SQL 문을 작성해주세요. (SQL을 실행하면 다음과 같이 출력되어야 합니다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_8.PNG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;풀이 방법&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FROM에 테이블 이름을 지정하고, SELECT에서 변수는 NAME을 선택합니다. 문제에서 가장 먼저 들어온 동물의 이름을 조회하라고 했으니 ORDER BY에  DATETIME을 입력하여 오름차순으로 정렬합니다. 이때 첫 번째 행에 있는 동물이 가장 먼저 들어온 동물이므로 LIMIT 1을 입력하여 데이터를 추출합니다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMAL_INS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html">해당 문제는 프로그래머스(Programmers)사이트의 SQL 고득점 Kit 에서 제공됩니다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(1) SQL 고득점 Kit 소개</title>
      <link href="https://bobohy01.github.io/codingtest-pro_sql_0" rel="alternate" type="text/html" title="(1) SQL 고득점 Kit 소개" />
      <published>2022-08-22T10:00:00+09:00</published>
      <updated>2022-08-22T10:00:00+09:00</updated>
      <id>https://bobohy01.github.io/codingtest-pro_sql_0</id>
      <content type="html" xml:base="https://bobohy01.github.io/codingtest-pro_sql_0">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로그래머스(Programmers)에서 Coding Test의 SQL 준비를 위해 예제 문제를 제공합니다. 문제는 프로그래머스(Programmers)사이트의 &lt;u&gt; &lt;a href=&quot;https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit&quot; target=&quot;#&quot;&gt; SQL 고득점 Kit &lt;/a&gt;&lt;/u&gt; 에서 풀 수있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\codingtest\pro1_sql_1.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SQL 고득점 Kit에 있는 문제는 총 27문제로 SELECT 7문제, SUM &amp;amp; MAX &amp;amp; MIN 4문제, GROUP BY 4문제, IS NULL 3문제, JOIN 4문제, STRING &amp;amp; DATE 5문제가 제공됩니다. 해당 문제들의 난이도가 쉽기 때문에 금방 푸실 수 있을 것입니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;번호&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문항수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SELECT&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SUM,MAX,MIN&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GROUP BY&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;IS NULL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;JOIN&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;STRING, DATE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Coding Test Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_0&quot;&gt; (1) SQL 고득점 Kit 소개  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_1&quot;&gt; (2) SQL 고득점 Kit - SELECT  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_2&quot;&gt; (3) SQL 고득점 Kit - SUM &amp;amp; MAX &amp;amp; MIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_3&quot;&gt; (4) SQL 고득점 Kit - GROUP BY  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_4&quot;&gt; (5) SQL 고득점 Kit - IS NULL  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_5&quot;&gt; (6) SQL 고득점 Kit - JOIN  &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./codingtest-pro_sql_6&quot;&gt; (7) SQL 고득점 Kit - String, Date  &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;
&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="codingtest" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(3) Crochet - 동백꽃 책갈피</title>
      <link href="https://bobohy01.github.io/crochet-bookmark" rel="alternate" type="text/html" title="(3) Crochet - 동백꽃 책갈피" />
      <published>2022-08-19T10:00:00+09:00</published>
      <updated>2022-08-19T10:00:00+09:00</updated>
      <id>https://bobohy01.github.io/crochet-bookmark</id>
      <content type="html" xml:base="https://bobohy01.github.io/crochet-bookmark">&lt;p&gt;&lt;br /&gt;
취미로 만드는 코바늘! &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;세번째로 동백꽃 책갈피 도안을 소개합니다. 쉽게 만들 수 있는 작품이니 도전해보시길 추천드립니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_Finished_product.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-큰-동백꽃&quot;&gt;1. 큰 동백꽃&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;꽃잎은 총 8개를 만들어 줍니다. 시작은 사슬뜨기 23번을 하고, 첫번째 꽃잎을 시작합니다. 첫번째 꽃잎은 23번째 코를 잡은 후 기둥코 사슬뜨기 3번을 하고 23번째 코에 한길긴뜨기 4번을 해줍니다. 22번째 코에 한길긴뜨기 5번하고, 21번째 코에 빼뜨기 한번 사슬뜨기 한번 해주면 꽃잎 1개가 완성됩니다. 똑같은 방법으로 2-4번 꽃잎도 만들어 주세요. 5번째 꽃잎은 11번재 코에 두길긴뜨기 5번, 10번째 코에 두길긴뜨기 5번하고, 9번째 코에 빼뜨기 1번 사슬뜨기 2번 해줍니다. 마지막 8번째 꽃잎은 2번째 코에 두길긴뜨기 5번, 1번째 코에 두길긴뜨기 4번 사슬뜨기 1번 빼뜨기 한번하고 실을 잘라줍니다. 두 가닥의 실을 2번 매듭지어 잘라주세요. 꽃잎은 아래 4개 위에 3개 가운데 1개로 잘 말아주면 이쁜 동백꽃이 됩니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;꽃잎&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;코수&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;                                                               뜨는법&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;실 색&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;23&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    (○  * 23)  = (사슬뜨기 * 23번)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;23, 22, 21&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    23:  (○  * 3), (dc * 4), 22: (dc * 5), 21: (●○)   &lt;br /&gt;     = (사슬뜨기 * 3번), (한길긴뜨기 * 4), (한길긴뜨기 * 5), (빼뜨기, 사슬뜨기)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2 - 4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;20, 19, 18  &lt;br /&gt; 17, 16, 15  &lt;br /&gt; 14, 13, 12&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    20,17, 14:  (dc * 5), 19, 16, 13: (dc * 5), 18, 15, 12: (●○)   &lt;br /&gt;     = (한길긴뜨기 * 5), (한길긴뜨기 * 5), (빼뜨기, 사슬뜨기)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5 - 7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;11, 10, 9    &lt;br /&gt;  8, 7, 6  &lt;br /&gt;      5, 4, 3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    11, 8, 5:  (tr * 5), 10, 7, 4: (tr * 5), (○ * 1), 9, 6, 3: ●, (○ * 2)   &lt;br /&gt;     = (두길긴뜨기 * 5), (두길긴뜨기 * 5), 빼뜨기, (사슬뜨기 *2)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2, 1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    2:  (tr * 5), 1: (tr * 4), (○ * 1), ●   &lt;br /&gt;     = (두길긴뜨기 * 5), (두길긴뜨기 * 4), (사슬뜨기 * 1), 빼뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_1.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-수술-만들기&quot;&gt;▶ 수술 만들기&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
수술은 사슬뜨기를 3번하고 첫코에 한길긴뜨기 4코 모아뜨기를 한 후 첫코에 빼뜨기를 합니다. 실 2가닥은 매듭지어 마무리 해줍니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;                                                                         뜨는법&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;실 색&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    (○  * 3), (4dc in 1st), ●  = (사슬뜨기 * 3번), (한길긴뜨기 4코 모아뜨기), 빼뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;노란색&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_2.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-큰-동백꽃과-수술-연결하기&quot;&gt;▶ 큰 동백꽃과 수술 연결하기&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
수술을 기준으로 꽃잎의 모양을 잡아줍니다. 잎이 잘 고정 할 수 있게 빨간실을 돗바늘에 연결하여 꽃잎을 맨아래 부터 가운데까지 한 번에 왔다 갔다하며 고정해줍니다. 꽃잎이 고정되었으면 실을 잘라 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_3.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-동백꽃-받침대&quot;&gt;2. 동백꽃 받침대&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;꽃받침을 위해 매직링에 기둥코 3개하고 한길긴뜨기 14번을 해준 후 기둥코 3번째 코에 빼뜨기를 해줍니다.잎사귀를 만들기 위해 사슬뜨기 6개를 하고 사슬뜨기 뒤 코 6개에 각각 짧은뜨기, 한길긴뜨기, 두길긴뜨기, 한길긴뜨기, 짧은뜨기, 빼뜨기를 합니다. 잎이 힘이 없기 때문에 단단하게 해주기 위해 잎 테두리에 빼뜨기 6번 사슬뜨기 1번 빼뜨기 6번으로 모양을 잡아 잎사귀를 완성합니다. 다음코에 똑같은 방법으로 잎사귀를 한개 더 만들어 줍니다. 꽃 받침을 단단하게 하기 위해 한길긴뜨기로 만든 코에 14번 모두 빼뜨기를 해줍니다. 뒤쪽 매직링에 코바늘을 넣어 빼뜨기로 꽃받침 아랫부분으로 방향을 바꿔줍니다. 사슬뜨기 65번으로 줄 부분을 만들어 줍니다. 줄의 길이는 사슬뜨기를 조정하여 원하는 길이 만큼 만들어주세요. 마지막 2코는 작은꽃 받침대와 잎사귀를 만들어 줍니다. 작은 꽃 받침대는 사슬뜨기 3번으로 기둥코를 세우고 한길긴뜨기 7번 사슬뜨기 3번 빼뜨기 한번으로 부채꼴 모양으로 만들어주세요. 바로 다음코에 잎사귀를 만들어 주세요. 마지막으로 줄부부인 사슬뜨기 65코에 빼뜨기를 해주어 튼튼하게 만듭니다. 매직링안에 빼뜨기를 해주고 매듭을 지어주면 받침대가 완성됩니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;코수&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;                                                                   뜨는법&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;실 색&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매직링&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    (○  * 3), (dc * 14), ●  = (사슬뜨기 * 3번), (한길긴뜨기 * 14번), 빼뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;잎사귀 1-2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;52&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;     (○  * 6), (X dc tr dc x * 1), ●, (● * 6), ○ , (● * 6)   &lt;br /&gt;     = (사슬뜨기 * 6번), (짧은뜨기 한길긴뜨기 두길긴뜨기 한길긴뜨기 짧은뜨기 * 1), 빼뜨기 , &lt;br /&gt;     (빼뜨기 * 6번), 사슬뜨기 , (빼뜨기 * 6번)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;매직링&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;     (● * 14)   &lt;br /&gt;     = (빼뜨기 * 14번)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;줄&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;65&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;     (○ * 65)   &lt;br /&gt;     = (사슬뜨기 * 65번)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;작은꽃 받침대&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;     (○ * 3), (dc * 7), (○ * 3), ●    &lt;br /&gt;     = (사슬뜨기 * 3번), (한길긴뜨기 * 7번), (사슬뜨기 * 3번), 빼뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;작은꽃 잎사귀&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;17&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;     (○  * 6), (X dc tr dc x * 1), ●, (● * 6), ○ , (● * 6)   &lt;br /&gt;     = (사슬뜨기 * 6번), (짧은뜨기 한길긴뜨기 두길긴뜨기 한길긴뜨기 짧은뜨기 * 1), 빼뜨기 , &lt;br /&gt;     (빼뜨기 * 6번), 사슬뜨기 , (빼뜨기 * 6번)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;줄&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;65&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;     (● * 65)   &lt;br /&gt;     = (빼뜨기 * 65번)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;녹색&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_4.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-작은-동백꽃&quot;&gt;▶ 작은 동백꽃&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;작은꽃 받침대에 꽃잎 3개를 만들어 줍니다. 1번째 코에 사슬뜨기 3번 한길긴뜨기2번하고 2번째 코에 한길긴뜨기 3번 빼뜨기 사슬뜨기를 해주면 꽃잎 1개가 됩니다. 2번 반복하여 꽃잎을 3개 만들어 준 후 돌돌말아 글루건으로 붙여주면 작은 동백꽃이 완성됩니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;꽃잎&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;코수&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;                                                                    뜨는법&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;실 색&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    1: (○  * 3), (dc * 2), 2: (dc * 3), ●○    &lt;br /&gt;     = (사슬뜨기 * 3번), (한길긴뜨기 * 2), (한길긴뜨기 * 3), 빼뜨기, 사슬뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    3: (dc * 3), 4: (dc * 3), ●○    &lt;br /&gt;     = (한길긴뜨기 * 3), (한길긴뜨기 * 3), 빼뜨기, 사슬뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    5: (dc * 3), 6: (dc * 3), 7: ●    &lt;br /&gt;     = (한길긴뜨기 * 3), (한길긴뜨기 * 3), 빼뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;빨간색&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_5.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-작은-동백꽃-수술&quot;&gt;▶ 작은 동백꽃 수술&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;작은 동백꽃 수술은 사슬뜨기 3번을 하고 1번째 코에 한길긴뜨기 2코 모아뜨기를 해준 후 빼뜨기를 하면 됩니다. 실 2가닥을 매듭지어 짧게 잘라준 후 앞에서 만들었던 작은 동백꽃 안에 글루건으로 붙여주면 완성됩니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;                                                                              뜨는법&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;실 색&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;    (○  * 3), (2dc in 1st), ●  = (사슬뜨기 * 3번), (한길긴뜨기 2코 모아뜨기), 빼뜨기&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;노란색&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_6.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-큰-동백꽃과-받침대-연결&quot;&gt;3. 큰 동백꽃과 받침대 연결&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
큰 동백꽃 뒤편 매듭이 보이지 않게 받침대에 올려주세요. 그리고 글루건으로 잎사귀가 잘보이는 위치에 동백꽃을 조정하여 알맞게 붙여주세요. 그럼 동백꽃 책갈피가 완성됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;\post_images\crochet\crochet_bookmark_7.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color: #000066&quot;&gt; [주의사항] &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;코바늘은 취미로 만들다보니 도안을 잊어버려 기억하고자 정리를 시작했습니다. &lt;br /&gt; 해당 인형은 판매하는 것이 아니기 때문에 판매 문의는 하지 말아주세요. &lt;br /&gt; 그럼 모두 이쁜 작품 만드시길 바랍니다~!!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;table-of-contents-list&quot;&gt;
    &lt;h2 class=&quot;table-of-contents-list&quot;&gt; Crochet doll Contents &lt;/h2&gt;
    &lt;ul class=&quot;table-of-contents-list&quot;&gt;
        &lt;li&gt;&lt;a href=&quot;./crochet-macaron&quot;&gt; (1) Crochet dall - 마카롱 &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./crochet-whale&quot;&gt; (2) Crochet doll - 고래 &lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;./crochet-bookmark&quot;&gt; (3) Crochet - 동백꽃 책갈피 &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/div&gt;

&lt;!--
&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;.//python-basic&quot;&gt; (1) Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control&quot;&gt; (2) Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

--&gt;</content>

      
      
      
      
      

      <author>
          <name>bobohy01</name>
        
        
      </author>

      

      
        <category term="crochet" />
      

      
        <summary type="html">취미로 만드는 코바늘!</summary>
      

      
      
    </entry>
  
</feed>
